% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addCohortIntersect.R
\name{addCohortIntersect}
\alias{addCohortIntersect}
\title{It creates columns to indicate overlaps information}
\usage{
addCohortIntersect(
  x,
  cdm,
  cohortTableName,
  cohortId = NULL,
  value = c("number", "binary", "date", "time"),
  window = c(0, NA),
  order = "first",
  cohortName = NA,
  name = "{value}_{tableName}_{window}_{order}",
  tablePrefix = NULL
)
}
\arguments{
\item{x}{table containing the individual for which the overlap indicator to be attached as extra columns}

\item{cdm}{cdm containing the tables}

\item{cohortTableName}{name of the cohort that we want to check for overlap}

\item{cohortId}{cohort definition Id to include it can be a list if multiple}

\item{value}{value of interest to added it can be number,binary,date or time}

\item{window}{window to consider events of, from date of reference in table x
to date of event at event table}

\item{order}{last or first date to use for date calculation}

\item{cohortName}{name to give cohortId}

\item{name}{naming of the added column}

\item{tablePrefix}{Whether resultant table will rename. By default: NULL}
}
\value{
table with added columns with overlap information
}
\description{
It creates columns to indicate overlaps information
}
\examples{

\dontrun{
  cohort1 <- dplyr::tibble(
cohort_definition_id = c(1, 1, 1, 1, 1),
subject_id = c(1, 1, 1, 2, 2),
cohort_start_date = as.Date(
 c(
   "2020-01-01",
   "2020-01-15",
   "2020-01-20",
   "2020-01-01",
   "2020-02-01"
 )
),
cohort_end_date = as.Date(
 c(
   "2020-01-01",
   "2020-01-15",
   "2020-01-20",
   "2020-01-01",
   "2020-02-01"
 )
)
)

cohort2 <- dplyr::tibble(
 cohort_definition_id = c(1, 1, 1, 1, 1, 1, 1),
 subject_id = c(1, 1, 1, 2, 2, 2, 1),
 cohort_start_date = as.Date(
   c(
     "2020-01-15",
     "2020-01-25",
     "2020-01-26",
     "2020-01-29",
     "2020-03-15",
     "2020-01-24",
     "2020-02-16"
   )
 ),
 cohort_end_date = as.Date(
   c(
     "2020-01-15",
     "2020-01-25",
     "2020-01-26",
     "2020-01-29",
     "2020-03-15",
     "2020-01-24",
     "2020-02-16"
   )
 ),
)

cdm <- mockCohortProfiles(cohort1=cohort1, cohort2=cohort2)

result <- cdm$cohort1 \%>\% addCohortIntersect(cdm = cdm,
cohortTableName = "cohort2", value = "date") \%>\% dplyr::collect()
}

}
