% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addIntersect.R
\name{addIntersect}
\alias{addIntersect}
\title{It creates columns to indicate overlaps information}
\usage{
addIntersect(
  x,
  cdm,
  cohortTableName,
  cohortId = NULL,
  value = NULL,
  window = list(c(0, Inf)),
  indexDate = "cohort_start_date",
  targetStartDate = "cohort_start_date",
  targetEndDate = "cohort_end_date",
  order = "first",
  nameStyle = "{cohortName}_{window}",
  tablePrefix = NULL
)
}
\arguments{
\item{x}{table containing the individual for which the overlap indicator to
be attached as extra columns}

\item{cdm}{cdm containing the tables}

\item{cohortTableName}{name of the cohort that we want to check for overlap}

\item{cohortId}{vector of cohort definition ids to include}

\item{value}{value of interest to add: it can be count, flag, date or time}

\item{window}{window to consider events of}

\item{indexDate}{date of reference in table x}

\item{targetStartDate}{date of reference in cohort table, either for start
(in overlap) or on its own (for incidence)}

\item{targetEndDate}{date of reference in cohort table, either for end
(overlap) or NULL (if incidence)}

\item{order}{last or first date to use for date/time calculations}

\item{nameStyle}{naming of the added column or columns, should include
required parameters}

\item{tablePrefix}{The stem for the permanent tables that will
be created. If NULL, temporary tables will be used throughout.}
}
\value{
table with added columns with overlap information
}
\description{
It creates columns to indicate overlaps information
}
\examples{

\dontrun{
  cohort1 <- dplyr::tibble(
cohort_definition_id = c(1, 1, 1, 1, 1),
subject_id = c(1, 1, 1, 2, 2),
cohort_start_date = as.Date(
 c(
   "2020-01-01",
   "2020-01-15",
   "2020-01-20",
   "2020-01-01",
   "2020-02-01"
 )
),
cohort_end_date = as.Date(
 c(
   "2020-01-01",
   "2020-01-15",
   "2020-01-20",
   "2020-01-01",
   "2020-02-01"
 )
)
)

cohort2 <- dplyr::tibble(
 cohort_definition_id = c(1, 1, 1, 1, 1, 1, 1),
 subject_id = c(1, 1, 1, 2, 2, 2, 1),
 cohort_start_date = as.Date(
   c(
     "2020-01-15",
     "2020-01-25",
     "2020-01-26",
     "2020-01-29",
     "2020-03-15",
     "2020-01-24",
     "2020-02-16"
   )
 ),
 cohort_end_date = as.Date(
   c(
     "2020-01-15",
     "2020-01-25",
     "2020-01-26",
     "2020-01-29",
     "2020-03-15",
     "2020-01-24",
     "2020-02-16"
   )
 ),
)

cdm <- mockCohortProfiles(cohort1=cohort1, cohort2=cohort2)

result <- cdm$cohort1 \%>\% addCohortIntersect(cdm = cdm,
cohortTableName = "cohort2", value = "date") \%>\% dplyr::collect()
}

}
